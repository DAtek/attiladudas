- hosts: all
  vars:
    # general
    ansible_user: root
    service: "{{ app_name }}.service"
    base_dir: "/opt/{{ app_name }}"
    frontend_dir: "{{ base_dir }}/frontend"
    starter_script: "{{ base_dir }}/run_server.sh"
    static_dir: "{{ base_dir }}/frontend/static"
    assets_dir: "{{ base_dir }}/frontend/assets"
    media_dir: "{{ base_dir }}/media"
    server_socket_path: "/var/run/{{ app_name }}/server.sock"
    exec_start: "{{ base_dir }}/backend/run-server -socket {{ server_socket_path }}"
    environment_file: "/opt/{{ app_name }}/env"

    # you need to generate these keys manually
    public_key: "{{ base_dir }}/public.pem"
    private_key: "{{ base_dir }}/private.pem"

    environ_:
      API_MEDIA_DIR: "{{ media_dir }}"
      MIGRATIONS_DIR: "/opt/{{ app_name }}/backend/migrations"

    # logging
    logrotate_preserve_amount: 4
    max_log_size: 8M
    log_path: "/var/log/{{ app_name }}/log"

  environment: "{{ environ | combine(environ_) }}"

  tasks:
    - name: check vars
      assert:
        that:
          - app_name != ''
          - with_nginx != ''
          - server_names != ''
      tags:
        - check_vars

    - name: install app
      import_tasks: ../tasks/install_app.yaml

    - name: configure nginx
      import_tasks: ../tasks/configure_nginx.yaml
      when: with_nginx

    - name: configure logging
      import_tasks: ../tasks/configure_logging.yaml

  handlers:
    - name: restart rsyslog
      systemd:
        name: rsyslog.service
        state: restarted

    - name: restart service
      systemd:
        name: "{{ service }}"
        state: restarted
      notify:
        - restart nginx

    - name: restart nginx
      systemd:
        name: nginx
        state: restarted
