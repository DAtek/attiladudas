name: CI/CD Pipeline

on:
  push:
    branches:
    - main
  pull_request:


jobs:
  CICD:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true

    - uses: extractions/setup-just@v1

    - name: Get project name
      id: get_project_name
      working-directory: ./frontend
      shell: bash
      run: |
        branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
        project_name=$(just get-project-name ${branch})
        echo "project_name=${project_name}" >> $GITHUB_OUTPUT

    - name: Checkout LFS objects
      run: git lfs checkout

    - uses: actions/setup-go@v4
      with:
        go-version: '>=1.24.0'

    - name: Test backend
      shell: bash
      working-directory: ./backend
      run: |
        go install gotest.tools/gotestsum@latest
        just test-cover

    - uses: pnpm/action-setup@v4
      with:
        version: 9

    - name: Test frontend
      shell: bash
      working-directory: ./frontend
      run: |
        pnpm install
        pnpm check
        pnpm test

    - uses: Sumanshu-Nankana/setup-aws-cli@v1
      with:
        region: ${{ vars.AWS_DEFAULT_REGION }}
        access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Deploy frontend
      shell: bash
      env:
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_PROJECT_NAME: ${{ steps.get_project_name.outputs.project_name }}
        PUBLIC_DATEK_WS_URL: ${{ vars.PUBLIC_DATEK_WS_URL }}
      working-directory: ./frontend
      run: |
        just download-images-from-s3
        just deploy-frontend

    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        fail_ci_if_error: true
        files: backend/.coverage
        token: ${{ secrets.CODECOV_TOKEN }}
