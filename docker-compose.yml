version: '3.9'

services:
  nginx:
    image: nginx
    volumes:
      - "./nginx/attiladudas_dev.conf:/etc/nginx/conf.d/default.conf:ro"
      - "./tmp/media:/media"
      - "./tmp:/var/run/server"
    ports:
      - "${APP_PORT-8000}:80"
    environment:
      - NGINX_PORT=80
    depends_on:
      - backend
      - frontend
    profiles:
      - all

  backend:
    image: backend
    user: backend
    build: ./backend
    environment:
      - API_DB_HOST=db
      - API_DB_PORT=5432
      - API_DB_USER=${API_DB_USER}
      - API_DB_PASSWORD=${API_DB_PASSWORD}
      - API_DB_NAME=${API_DB_NAME}
      - API_MIGRATIONS_DIR=/migrations
      - API_MEDIA_DIR=/media
      - API_PRIVATE_KEY
      - API_PUBLIC_KEY
      - API_SOCKET_PATH=/var/run/server/server.sock
      - GIN_MODE=release
    volumes:
      - "./tmp/media:/media"
      - "./tmp:/var/run/server"
    ports:
      - "${BACKEND_PORT-8080}:8080"
    depends_on:
      - db
    profiles:
      - all

  frontend:
    image: frontend
    build: ./frontend
    working_dir: /frontend
    command: >
      bash -c "npm install
      && npm run dev"
    ports:
      - "${FRONTEND_PORT-5173}:5173"
    volumes:
      - "./frontend:/frontend"
    profiles:
      - all

  db:
    image: postgres:14
    environment:
      - POSTGRES_PASSWORD=${API_DB_PASSWORD}
      - POSTGRES_USER=${API_DB_USER}
      - POSTGRES_DB=${API_DB_NAME}
    ports:
      - "${API_DB_PORT}:5432"
    profiles:
      - integration_test
      - all
  
  empty-db:
    image: postgres:14
    environment:
      - POSTGRES_PASSWORD=${API_DB_PASSWORD}
      - POSTGRES_USER=${API_DB_USER}
      - POSTGRES_DB=${API_DB_NAME}
    ports:
      - "${EMPTY_POSTGRES_PORT}:5432"
    profiles:
      - integration_test